@startuml

skinparam monochrome true
title th_move \n


start

while ()
    :comRobotStartEvent?START;
    :compteurEchec = 0;

    :startRobot?eventFlags;

    if (eventFlags) then (WD)
        :eventWD!START;
        :ret = ComRobot::Write(StartWithWD());
    else (NOWD)
        :ret = ComRobot::Write(StartWithoutWD());
    endif

    if (ret) then (OK)

        :msg = new Message(ACK);
        :msgToMon!msg;
        :reset(EventFlags);
        note : Consume startRobot event

        while (compteurEchec < 3 && stopRobot == 0) is (true)
            :wait 100ms;
            if (move==STOP) then (yes)
                :err = robot.Write(Stop());
            elseif (move==GAUCHE) then (yes)
                :err = robot.Write(GoLeft());
            elseif (move==DROITE) then (yes)
                :err = robot.Write(GoRight());
            elseif (move==AVANT) then (yes)
                :err = robot.Write(GoForward());
            elseif (move==ARRIERE) then (yes)
                :err = robot.Write(GoBackward());
            endif
            if (err < 0 && watchdogStarted) then
                :compteurEchec++;
            endif
        endwhile (false)
        :eventWD!STOP;
        :stopRobot = 0;

        if (compteurEchec > 3) then (true)
            ':comRobotStartEvent!STOP;
            'note
            '    evite de rerentrer dans le début du thread
            '    si on sait qu'on coupe la com à cause du temps de traitement
            '    de th_com_robot
            'endnote
            :comRobotStartEvent!LOST;
        else (false)
        endif
    else (0)
        :msg = new Message(MESSAGE_ANSWER_NACK);
        :msgToMon!msg;
        :reset(EventFlags);
    endif
endwhile
stop
@enduml
