@startuml

skinparam monochrome true
title th_move \n


start

floating note right
compteurEchec : int
stopEvent : int //pe modifier avec event flag xenomai polling
endnote

while ()
    :comDemarree?;
    note : syn event flag ?
    :compteurEchec = 0;

    :startRobot?eventFlags;
    note
    eventFlags : sans WD, avec WD
    endnote

    if (eventFlags) then (STARTWD)
        :startWD!;
        :ret = ComRobot::Write(StartWithWD());
    else (START)
    :ret = ComRobot::Write(StartWithoutWD());
    endif
    
    if (ret) then (1)
    
    :msg = new Message(ACK);

    :msgToMon!msg;

    :reset(EventFlags);

    while (compteurEchec < 3 && poll(eventStop) == false) is (true)
        :wait 100ms;
        if (move==STOP) then (yes)
            :err = robot.Write(Stop());
        elseif (move==GAUCHE) then (yes)
            :err = robot.Write(GoLeft());
        elseif (move==DROITE) then (yes)
            :err = robot.Write(GoRight());
        elseif (move==AVANT) then (yes)
            :err = robot.Write(GoForward());
        elseif (move==ARRIERE) then (yes)
            :err = robot.Write(GoBackward());
        endif
        if (err) then (!ROBOT_OK)
            :compteurEchec++;
        endif
    endwhile (false)
    :stopWD!
:reset(eventStop);

if (compteurEchec > 3) then (true)
    :reset(comDemarre);
    note : pe g√©rer dans dcom robot
    :event = CLOSE
    openComRobot!event;
    :msg = new Message(COMMUNICATION_LOST)
    msgToMon!msg;
else (false)
endif
else (0)
    :msg = new Message(NACK);

    :msgToMon!msg;

    :reset(EventFlags);
endif
endwhile
stop
@enduml
